// Code generated by "stringer -type=TokenType -output=token_types_string.go"; DO NOT EDIT.

package compiler

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokenTypeIdentifier-1]
	_ = x[TokenTypeLet-2]
	_ = x[TokenTypeConst-3]
	_ = x[TokenTypeFunc-4]
	_ = x[TokenTypeIf-5]
	_ = x[TokenTypeElse-6]
	_ = x[TokenTypeFor-7]
	_ = x[TokenTypeLoop-8]
	_ = x[TokenTypeReturn-9]
	_ = x[TokenTypeBreak-10]
	_ = x[TokenTypeContinue-11]
	_ = x[TokenTypeStruct-12]
	_ = x[TokenTypeInterface-13]
	_ = x[TokenTypeLineBreak-14]
	_ = x[TokenTypeSemi-15]
	_ = x[TokenTypeComma-16]
	_ = x[TokenTypeColon-17]
	_ = x[TokenTypeLeftParen-18]
	_ = x[TokenTypeRightParen-19]
	_ = x[TokenTypeLeftBrace-20]
	_ = x[TokenTypeRightBrace-21]
	_ = x[TokenTypeLeftBracket-22]
	_ = x[TokenTypeRightBracket-23]
	_ = x[TokenTypeDot-24]
	_ = x[TokenTypeEqual-25]
	_ = x[TokenTypeDoubleEqual-26]
	_ = x[TokenTypeBangEqual-27]
	_ = x[TokenTypePlus-28]
	_ = x[TokenTypeMinus-29]
	_ = x[TokenTypeStar-30]
	_ = x[TokenTypeDoubleStar-31]
	_ = x[TokenTypeSlash-32]
	_ = x[TokenTypePercent-33]
	_ = x[TokenTypeAlpha-34]
	_ = x[TokenTypeWavy-35]
	_ = x[TokenTypeCaret-36]
	_ = x[TokenTypeAmpersand-37]
	_ = x[TokenTypeBang-38]
	_ = x[TokenTypeVertical-39]
	_ = x[TokenTypeLeftAngle-40]
	_ = x[TokenTypeRightAngle-41]
	_ = x[TokenTypeDoubleLeftAngle-42]
	_ = x[TokenTypeDoubleRightAngle-43]
	_ = x[TokenTypeDoubleAmpersand-44]
	_ = x[TokenTypeDoubleVertical-45]
	_ = x[TokenTypeLeftAngleEqual-46]
	_ = x[TokenTypeRightAngleEqual-47]
	_ = x[TokenTypeArrow-48]
	_ = x[TokenTypeDoublePlus-49]
	_ = x[TokenTypeDoubleMinus-50]
	_ = x[TokenTypePlusEqual-51]
	_ = x[TokenTypeMinusEqual-52]
	_ = x[TokenTypeStarEqual-53]
	_ = x[TokenTypeSlashEqual-54]
	_ = x[TokenTypePercentEqual-55]
	_ = x[TokenTypeDoubleLeftAngleEqual-56]
	_ = x[TokenTypeDoubleRightAngleEqual-57]
	_ = x[TokenTypeAmpersandEqual-58]
	_ = x[TokenTypeVerticalEqual-59]
	_ = x[TokenTypeCaretEqual-60]
	_ = x[TokenTypeEllipsis-61]
	_ = x[TokenTypeDoubleDots-62]
	_ = x[TokenTypeQuestion-63]
	_ = x[TokenTypeQuestionDot-64]
	_ = x[TokenTypeDoubleQuestion-65]
	_ = x[TokenTypeInterplolationStart-66]
	_ = x[TokenTypeDecimalInteger-67]
	_ = x[TokenTypeOctalInteger-68]
	_ = x[TokenTypeHexadecimalInteger-69]
	_ = x[TokenTypeBinaryInteger-70]
	_ = x[TokenTypeExponent-71]
	_ = x[TokenTypeFloat-72]
	_ = x[TokenTypeRune-73]
	_ = x[TokenTypeString-74]
	_ = x[TokenTypeTemplateString-75]
	_ = x[TokenTypeTrue-76]
	_ = x[TokenTypeFalse-77]
	_ = x[TokenTypeLineComment-78]
}

const _TokenType_name = "TokenTypeIdentifierTokenTypeLetTokenTypeConstTokenTypeFuncTokenTypeIfTokenTypeElseTokenTypeForTokenTypeLoopTokenTypeReturnTokenTypeBreakTokenTypeContinueTokenTypeStructTokenTypeInterfaceTokenTypeLineBreakTokenTypeSemiTokenTypeCommaTokenTypeColonTokenTypeLeftParenTokenTypeRightParenTokenTypeLeftBraceTokenTypeRightBraceTokenTypeLeftBracketTokenTypeRightBracketTokenTypeDotTokenTypeEqualTokenTypeDoubleEqualTokenTypeBangEqualTokenTypePlusTokenTypeMinusTokenTypeStarTokenTypeDoubleStarTokenTypeSlashTokenTypePercentTokenTypeAlphaTokenTypeWavyTokenTypeCaretTokenTypeAmpersandTokenTypeBangTokenTypeVerticalTokenTypeLeftAngleTokenTypeRightAngleTokenTypeDoubleLeftAngleTokenTypeDoubleRightAngleTokenTypeDoubleAmpersandTokenTypeDoubleVerticalTokenTypeLeftAngleEqualTokenTypeRightAngleEqualTokenTypeArrowTokenTypeDoublePlusTokenTypeDoubleMinusTokenTypePlusEqualTokenTypeMinusEqualTokenTypeStarEqualTokenTypeSlashEqualTokenTypePercentEqualTokenTypeDoubleLeftAngleEqualTokenTypeDoubleRightAngleEqualTokenTypeAmpersandEqualTokenTypeVerticalEqualTokenTypeCaretEqualTokenTypeEllipsisTokenTypeDoubleDotsTokenTypeQuestionTokenTypeQuestionDotTokenTypeDoubleQuestionTokenTypeInterplolationStartTokenTypeDecimalIntegerTokenTypeOctalIntegerTokenTypeHexadecimalIntegerTokenTypeBinaryIntegerTokenTypeExponentTokenTypeFloatTokenTypeRuneTokenTypeStringTokenTypeTemplateStringTokenTypeTrueTokenTypeFalseTokenTypeLineComment"

var _TokenType_index = [...]uint16{0, 19, 31, 45, 58, 69, 82, 94, 107, 122, 136, 153, 168, 186, 204, 217, 231, 245, 263, 282, 300, 319, 339, 360, 372, 386, 406, 424, 437, 451, 464, 483, 497, 513, 527, 540, 554, 572, 585, 602, 620, 639, 663, 688, 712, 735, 758, 782, 796, 815, 835, 853, 872, 890, 909, 930, 959, 989, 1012, 1034, 1053, 1070, 1089, 1106, 1126, 1149, 1177, 1200, 1221, 1248, 1270, 1287, 1301, 1314, 1329, 1352, 1365, 1379, 1399}

func (i TokenType) String() string {
	i -= 1
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
